name: Laravel Backend CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  laravel-tests:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: testing
          MYSQL_USER: user
          MYSQL_PASSWORD: password
        ports:
         - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3
          
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with: 
          php-version: '8.2'

      - name: Install Composer dependencies
        run: composer install --no-progress --prefer-dist --optimize-autoloader

      - name: Copy .env file
        run: cp .env.example .env

      - name: Generate APP key
        run: php artisan key:generate

      - name: Set DB environment variables
        run: |
          sed -i 's/DB_CONNECTION=.*/DB_CONNECTION=mysql/' .env
          sed -i 's/DB_HOST=.*/DB_HOST=127.0.0.1/' .env
          sed -i 's/DB_PORT=.*/DB_PORT=3306/' .env
          sed -i 's/DB_DATABASE=.*/DB_DATABASE=testing/' .env
          sed -i 's/DB_USERNAME=.*/DB_USERNAME=user/' .env
          sed -i 's/DB_PASSWORD=.*/DB_PASSWORD=password/' .env

      - name: Wait for MySQL to be ready
        run: |
          for i in {1..30}; do
            if mysqladmin ping -h127.0.0.1 -uuser -ppassword --silent; then
              echo "MySQL is ready"
              break
            fi
            echo "Waiting for MySQL..."
            sleep 2
          done

      - name: Run Laravel migrations
        run: php artisan migrate --force

      - name: Run PHPUnit tests and generate coverage
        run: php artisan test --coverage-clover=coverage.xml

      - name: Upload coverage report to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: coverage.xml
